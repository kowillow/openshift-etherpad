---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: etherpad
  labels:
    app: etherpad
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: etherpad
    deploymentconfig: etherpad
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: etherpad
        deploymentconfig: etherpad
    spec:
      volumes:
        - name: etherpad-settings
          configMap:
            name: etherpad-settings
            defaultMode: 420
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /
              port: 9001
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          name: etherpad
          livenessProbe:
            httpGet:
              path: /
              port: 9001
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              value: postgresql
            - name: DB_PORT
              value: '5432'
            - name: DB_DATABASE
              value: etherpad
            - name: DB_USER
              value: ether
            - name: DB_PASS
              value: ether
            - name: NODE_ENV
              value: production
          ports:
            - containerPort: 9001
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: etherpad-settings
              mountPath: /opt/etherpad/config
          terminationMessagePolicy: File
          image: 'quay.io/wkulhanek/etherpad:1.8.16'
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: etherpad
  labels:
    app: etherpad
spec:
  ports:
    - name: etherpad
      protocol: TCP
      port: 9001
      targetPort: 9001
  selector:
    app: etherpad
    deploymentconfig: etherpad
status:
  loadBalancer: {}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: etherpad
  labels:
    app: etherpad
spec:
  to:
    kind: Service
    name: etherpad
    weight: 100
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: postgresql
  labels:
    app: etherpad_db
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    name: postgresql
  template:
    metadata:
      labels:
        name: postgresql
    spec:
      containers:
        - resources:
            limits:
              memory: 512Mi
          name: postgresql
          image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:d006800f4f5fc2db85caf46b84f2da3b32f309f55c475f78f1e30388028a584c
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-name
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/pgsql/data
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-pv-claim
---
kind: Secret
apiVersion: v1
metadata:
  labels:
    app: etherpad_db
  name: postgresql
data:
  database-name: ZXRoZXJwYWQ=
  database-password: ZXRoZXI=
  database-user: ZXRoZXI=
type: Opaque
---
kind: Service
apiVersion: v1
metadata:
  name: postgresql
  creationTimestamp: null
  labels:
    app: etherpad_db
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    name: postgresql
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pv-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
